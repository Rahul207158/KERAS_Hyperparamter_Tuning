{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Xiap1_vnNmlZ"
      },
      "outputs": [],
      "source": [
        "import numpy as np\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df=pd.read_csv('diabetes.csv')"
      ],
      "metadata": {
        "id": "vJk3t9QyOtU2"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "znNOkEJMO0lF",
        "outputId": "e7b02d24-b2ca-4884-fb7f-60761879127f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   Pregnancies  Glucose  BloodPressure  SkinThickness  Insulin   BMI  \\\n",
              "0            6      148             72             35        0  33.6   \n",
              "1            1       85             66             29        0  26.6   \n",
              "2            8      183             64              0        0  23.3   \n",
              "3            1       89             66             23       94  28.1   \n",
              "4            0      137             40             35      168  43.1   \n",
              "\n",
              "   DiabetesPedigreeFunction  Age  Outcome  \n",
              "0                     0.627   50        1  \n",
              "1                     0.351   31        0  \n",
              "2                     0.672   32        1  \n",
              "3                     0.167   21        0  \n",
              "4                     2.288   33        1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-c01560ff-9e77-45bf-b595-d023b853b69d\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Pregnancies</th>\n",
              "      <th>Glucose</th>\n",
              "      <th>BloodPressure</th>\n",
              "      <th>SkinThickness</th>\n",
              "      <th>Insulin</th>\n",
              "      <th>BMI</th>\n",
              "      <th>DiabetesPedigreeFunction</th>\n",
              "      <th>Age</th>\n",
              "      <th>Outcome</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>6</td>\n",
              "      <td>148</td>\n",
              "      <td>72</td>\n",
              "      <td>35</td>\n",
              "      <td>0</td>\n",
              "      <td>33.6</td>\n",
              "      <td>0.627</td>\n",
              "      <td>50</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "      <td>85</td>\n",
              "      <td>66</td>\n",
              "      <td>29</td>\n",
              "      <td>0</td>\n",
              "      <td>26.6</td>\n",
              "      <td>0.351</td>\n",
              "      <td>31</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8</td>\n",
              "      <td>183</td>\n",
              "      <td>64</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>23.3</td>\n",
              "      <td>0.672</td>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1</td>\n",
              "      <td>89</td>\n",
              "      <td>66</td>\n",
              "      <td>23</td>\n",
              "      <td>94</td>\n",
              "      <td>28.1</td>\n",
              "      <td>0.167</td>\n",
              "      <td>21</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>137</td>\n",
              "      <td>40</td>\n",
              "      <td>35</td>\n",
              "      <td>168</td>\n",
              "      <td>43.1</td>\n",
              "      <td>2.288</td>\n",
              "      <td>33</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c01560ff-9e77-45bf-b595-d023b853b69d')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-c01560ff-9e77-45bf-b595-d023b853b69d button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-c01560ff-9e77-45bf-b595-d023b853b69d');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-51d68c06-8707-4bf1-b99f-e8745aa88b23\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-51d68c06-8707-4bf1-b99f-e8745aa88b23')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-51d68c06-8707-4bf1-b99f-e8745aa88b23 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.corr()['Outcome']\n",
        "df.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r3_rYazpO20U",
        "outputId": "1f1794bd-18f3-475f-ab43-c6ead0737eab"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(768, 9)"
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x=df.iloc[:,:-1].values\n",
        "y=df.iloc[:,-1].values\n",
        "x"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "o1hmzlAfO8p2",
        "outputId": "0fd99617-fd0e-46a5-cd6b-cc4225cbbb6e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([[  6.   , 148.   ,  72.   , ...,  33.6  ,   0.627,  50.   ],\n",
              "       [  1.   ,  85.   ,  66.   , ...,  26.6  ,   0.351,  31.   ],\n",
              "       [  8.   , 183.   ,  64.   , ...,  23.3  ,   0.672,  32.   ],\n",
              "       ...,\n",
              "       [  5.   , 121.   ,  72.   , ...,  26.2  ,   0.245,  30.   ],\n",
              "       [  1.   , 126.   ,  60.   , ...,  30.1  ,   0.349,  47.   ],\n",
              "       [  1.   ,  93.   ,  70.   , ...,  30.4  ,   0.315,  23.   ]])"
            ]
          },
          "metadata": {},
          "execution_count": 6
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.preprocessing import StandardScaler\n",
        "sc=StandardScaler()\n",
        "X=sc.fit_transform(x)"
      ],
      "metadata": {
        "id": "t3Z83SHuP7UE"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        " from sklearn.model_selection import train_test_split\n",
        " X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.2,random_state=1)"
      ],
      "metadata": {
        "id": "7nlTa8SJRazV"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import tensorflow\n",
        "from tensorflow import keras\n",
        "from keras import Sequential\n",
        "from keras.layers import Dense\n"
      ],
      "metadata": {
        "id": "teTZFo2dSDSt"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model=Sequential()\n",
        "model.add(Dense(32,activation='relu',input_dim=8))# first layer\n",
        "model.add(Dense(1,activation='sigmoid'))#output layer\n",
        "model.compile(optimizer='Adam',loss='binary_crossentropy',metrics=['accuracy'])\n",
        "model.fit(X_train,y_train,batch_size=32,epochs=10,validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "r_akL566SaNk",
        "outputId": "c955a010-8d33-43ff-b887-b466d80e0805"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/10\n",
            "20/20 [==============================] - 1s 13ms/step - loss: 0.7505 - accuracy: 0.4186 - val_loss: 0.7066 - val_accuracy: 0.5065\n",
            "Epoch 2/10\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.6734 - accuracy: 0.6107 - val_loss: 0.6377 - val_accuracy: 0.6429\n",
            "Epoch 3/10\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.6184 - accuracy: 0.7248 - val_loss: 0.5880 - val_accuracy: 0.7468\n",
            "Epoch 4/10\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.5772 - accuracy: 0.7524 - val_loss: 0.5544 - val_accuracy: 0.7727\n",
            "Epoch 5/10\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.5497 - accuracy: 0.7622 - val_loss: 0.5295 - val_accuracy: 0.8052\n",
            "Epoch 6/10\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.5267 - accuracy: 0.7655 - val_loss: 0.5132 - val_accuracy: 0.8052\n",
            "Epoch 7/10\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.5113 - accuracy: 0.7736 - val_loss: 0.5008 - val_accuracy: 0.7922\n",
            "Epoch 8/10\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4991 - accuracy: 0.7752 - val_loss: 0.4918 - val_accuracy: 0.7857\n",
            "Epoch 9/10\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4893 - accuracy: 0.7769 - val_loss: 0.4848 - val_accuracy: 0.7857\n",
            "Epoch 10/10\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4824 - accuracy: 0.7818 - val_loss: 0.4780 - val_accuracy: 0.7922\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.History at 0x78b5c8cde470>"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pip install -U keras-tuner"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "fmiBbKuwXzFr",
        "outputId": "efd4ce94-a902-4b85-bad6-3644e2a91b10"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting keras-tuner\n",
            "  Downloading keras_tuner-1.4.5-py3-none-any.whl (129 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m129.5/129.5 kB\u001b[0m \u001b[31m3.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hCollecting keras-core (from keras-tuner)\n",
            "  Downloading keras_core-0.1.7-py3-none-any.whl (950 kB)\n",
            "\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m950.8/950.8 kB\u001b[0m \u001b[31m10.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n",
            "\u001b[?25hRequirement already satisfied: packaging in /usr/local/lib/python3.10/dist-packages (from keras-tuner) (23.2)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from keras-tuner) (2.31.0)\n",
            "Collecting kt-legacy (from keras-tuner)\n",
            "  Downloading kt_legacy-1.0.5-py3-none-any.whl (9.6 kB)\n",
            "Requirement already satisfied: absl-py in /usr/local/lib/python3.10/dist-packages (from keras-core->keras-tuner) (1.4.0)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.10/dist-packages (from keras-core->keras-tuner) (1.23.5)\n",
            "Requirement already satisfied: rich in /usr/local/lib/python3.10/dist-packages (from keras-core->keras-tuner) (13.6.0)\n",
            "Collecting namex (from keras-core->keras-tuner)\n",
            "  Downloading namex-0.0.7-py3-none-any.whl (5.8 kB)\n",
            "Requirement already satisfied: h5py in /usr/local/lib/python3.10/dist-packages (from keras-core->keras-tuner) (3.9.0)\n",
            "Requirement already satisfied: dm-tree in /usr/local/lib/python3.10/dist-packages (from keras-core->keras-tuner) (0.1.8)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->keras-tuner) (3.3.0)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->keras-tuner) (3.4)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->keras-tuner) (2.0.6)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->keras-tuner) (2023.7.22)\n",
            "Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich->keras-core->keras-tuner) (3.0.0)\n",
            "Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich->keras-core->keras-tuner) (2.16.1)\n",
            "Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich->keras-core->keras-tuner) (0.1.2)\n",
            "Installing collected packages: namex, kt-legacy, keras-core, keras-tuner\n",
            "Successfully installed keras-core-0.1.7 keras-tuner-1.4.5 kt-legacy-1.0.5 namex-0.0.7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import kerastuner as kt"
      ],
      "metadata": {
        "id": "AcWOeLswbPwM",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1eb995ad-51b8-4e60-a27a-e788a8601b99"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Using TensorFlow backend\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-14-5fd8096cdee5>:1: DeprecationWarning: `import kerastuner` is deprecated, please use `import keras_tuner`.\n",
            "  import kerastuner as kt\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def build_model(hp):\n",
        "  model=Sequential()\n",
        "  model.add(Dense(32,activation='relu',input_dim=8))\n",
        "  model.add(Dense(1,activation='sigmoid'))\n",
        "  opt=hp.Choice('optimizer',values=['sgd','adam','rmsprop',\n",
        "                                    'adadelta'])\n",
        "  model.compile(optimizer=opt,loss='binary_crossentropy',\n",
        "                metrics=['accuracy'])\n",
        "  return  model\n"
      ],
      "metadata": {
        "id": "9cM0BIFfbWh7"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner=kt.RandomSearch(build_model,objective='val_accuracy',\n",
        "                   max_trials=6)\n"
      ],
      "metadata": {
        "id": "aaAI0W7dkpMM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.search(X_train,y_train,epochs=10,\n",
        "             validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_oQ3cBVYlPI0",
        "outputId": "e8dae0d2-d2ff-4160-ff5a-e4a7d1c77cee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Trial 4 Complete [00h 00m 02s]\n",
            "val_accuracy: 0.33766233921051025\n",
            "\n",
            "Best val_accuracy So Far: 0.8051947951316833\n",
            "Total elapsed time: 00h 00m 14s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.get_best_hyperparameters()[0].values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "pGJWdk1xlx-l",
        "outputId": "c8b0f971-bb70-47a5-e5df-226988188d1c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'optimizer': 'adam'}"
            ]
          },
          "metadata": {},
          "execution_count": 18
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model=tuner.get_best_models(num_models=1)[0]"
      ],
      "metadata": {
        "id": "1NPKBwAPoS3r"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Cv-iGbzNof_D",
        "outputId": "93e6cf9c-f634-4f91-ae96-df32761f4157"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Model: \"sequential\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " dense (Dense)               (None, 32)                288       \n",
            "                                                                 \n",
            " dense_1 (Dense)             (None, 1)                 33        \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 321 (1.25 KB)\n",
            "Trainable params: 321 (1.25 KB)\n",
            "Non-trainable params: 0 (0.00 Byte)\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(X_train,y_train,epochs=100,initial_epoch=11,\n",
        "          validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ex7KiaFzoi8q",
        "outputId": "1f270a01-2173-4e30-ab56-1fbe6d87b24a"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 12/100\n",
            "20/20 [==============================] - 1s 12ms/step - loss: 0.4791 - accuracy: 0.7736 - val_loss: 0.4748 - val_accuracy: 0.8052\n",
            "Epoch 13/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4729 - accuracy: 0.7638 - val_loss: 0.4701 - val_accuracy: 0.8052\n",
            "Epoch 14/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4679 - accuracy: 0.7720 - val_loss: 0.4678 - val_accuracy: 0.7987\n",
            "Epoch 15/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4631 - accuracy: 0.7785 - val_loss: 0.4659 - val_accuracy: 0.8052\n",
            "Epoch 16/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4598 - accuracy: 0.7834 - val_loss: 0.4642 - val_accuracy: 0.7987\n",
            "Epoch 17/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4566 - accuracy: 0.7850 - val_loss: 0.4625 - val_accuracy: 0.7987\n",
            "Epoch 18/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4545 - accuracy: 0.7883 - val_loss: 0.4615 - val_accuracy: 0.7922\n",
            "Epoch 19/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4523 - accuracy: 0.7883 - val_loss: 0.4593 - val_accuracy: 0.7922\n",
            "Epoch 20/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4513 - accuracy: 0.7850 - val_loss: 0.4590 - val_accuracy: 0.7922\n",
            "Epoch 21/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4495 - accuracy: 0.7850 - val_loss: 0.4578 - val_accuracy: 0.8052\n",
            "Epoch 22/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4483 - accuracy: 0.7850 - val_loss: 0.4579 - val_accuracy: 0.7987\n",
            "Epoch 23/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4469 - accuracy: 0.7818 - val_loss: 0.4590 - val_accuracy: 0.7987\n",
            "Epoch 24/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4465 - accuracy: 0.7801 - val_loss: 0.4572 - val_accuracy: 0.8052\n",
            "Epoch 25/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4453 - accuracy: 0.7785 - val_loss: 0.4572 - val_accuracy: 0.8052\n",
            "Epoch 26/100\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.4441 - accuracy: 0.7834 - val_loss: 0.4583 - val_accuracy: 0.8052\n",
            "Epoch 27/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4440 - accuracy: 0.7818 - val_loss: 0.4565 - val_accuracy: 0.8117\n",
            "Epoch 28/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4425 - accuracy: 0.7850 - val_loss: 0.4570 - val_accuracy: 0.8117\n",
            "Epoch 29/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4416 - accuracy: 0.7834 - val_loss: 0.4581 - val_accuracy: 0.7987\n",
            "Epoch 30/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4404 - accuracy: 0.7850 - val_loss: 0.4564 - val_accuracy: 0.8052\n",
            "Epoch 31/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4395 - accuracy: 0.7818 - val_loss: 0.4558 - val_accuracy: 0.8117\n",
            "Epoch 32/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4387 - accuracy: 0.7834 - val_loss: 0.4563 - val_accuracy: 0.8052\n",
            "Epoch 33/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4379 - accuracy: 0.7883 - val_loss: 0.4566 - val_accuracy: 0.8052\n",
            "Epoch 34/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4370 - accuracy: 0.7899 - val_loss: 0.4570 - val_accuracy: 0.7987\n",
            "Epoch 35/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4365 - accuracy: 0.7850 - val_loss: 0.4575 - val_accuracy: 0.8182\n",
            "Epoch 36/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4359 - accuracy: 0.7915 - val_loss: 0.4594 - val_accuracy: 0.8117\n",
            "Epoch 37/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4347 - accuracy: 0.7932 - val_loss: 0.4583 - val_accuracy: 0.8117\n",
            "Epoch 38/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4344 - accuracy: 0.7899 - val_loss: 0.4569 - val_accuracy: 0.8182\n",
            "Epoch 39/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4339 - accuracy: 0.7915 - val_loss: 0.4574 - val_accuracy: 0.8117\n",
            "Epoch 40/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4327 - accuracy: 0.7948 - val_loss: 0.4576 - val_accuracy: 0.7987\n",
            "Epoch 41/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4324 - accuracy: 0.7980 - val_loss: 0.4574 - val_accuracy: 0.7857\n",
            "Epoch 42/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4319 - accuracy: 0.7948 - val_loss: 0.4560 - val_accuracy: 0.8052\n",
            "Epoch 43/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4309 - accuracy: 0.7948 - val_loss: 0.4563 - val_accuracy: 0.8117\n",
            "Epoch 44/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4306 - accuracy: 0.7932 - val_loss: 0.4549 - val_accuracy: 0.8052\n",
            "Epoch 45/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4296 - accuracy: 0.7932 - val_loss: 0.4554 - val_accuracy: 0.7987\n",
            "Epoch 46/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4288 - accuracy: 0.7964 - val_loss: 0.4540 - val_accuracy: 0.8052\n",
            "Epoch 47/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4289 - accuracy: 0.7948 - val_loss: 0.4530 - val_accuracy: 0.8052\n",
            "Epoch 48/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4285 - accuracy: 0.7948 - val_loss: 0.4551 - val_accuracy: 0.7987\n",
            "Epoch 49/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4278 - accuracy: 0.7980 - val_loss: 0.4549 - val_accuracy: 0.8117\n",
            "Epoch 50/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4274 - accuracy: 0.7980 - val_loss: 0.4546 - val_accuracy: 0.8052\n",
            "Epoch 51/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4264 - accuracy: 0.7932 - val_loss: 0.4535 - val_accuracy: 0.8117\n",
            "Epoch 52/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4261 - accuracy: 0.7980 - val_loss: 0.4533 - val_accuracy: 0.8117\n",
            "Epoch 53/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4262 - accuracy: 0.7980 - val_loss: 0.4530 - val_accuracy: 0.8247\n",
            "Epoch 54/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4247 - accuracy: 0.7980 - val_loss: 0.4544 - val_accuracy: 0.7987\n",
            "Epoch 55/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4253 - accuracy: 0.7948 - val_loss: 0.4532 - val_accuracy: 0.8247\n",
            "Epoch 56/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4247 - accuracy: 0.7997 - val_loss: 0.4552 - val_accuracy: 0.7922\n",
            "Epoch 57/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4250 - accuracy: 0.7964 - val_loss: 0.4541 - val_accuracy: 0.8052\n",
            "Epoch 58/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4254 - accuracy: 0.7964 - val_loss: 0.4556 - val_accuracy: 0.8052\n",
            "Epoch 59/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4231 - accuracy: 0.7964 - val_loss: 0.4539 - val_accuracy: 0.8117\n",
            "Epoch 60/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4229 - accuracy: 0.7964 - val_loss: 0.4531 - val_accuracy: 0.8117\n",
            "Epoch 61/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4224 - accuracy: 0.7948 - val_loss: 0.4521 - val_accuracy: 0.8117\n",
            "Epoch 62/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4218 - accuracy: 0.7932 - val_loss: 0.4510 - val_accuracy: 0.8182\n",
            "Epoch 63/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4225 - accuracy: 0.7932 - val_loss: 0.4523 - val_accuracy: 0.8182\n",
            "Epoch 64/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4215 - accuracy: 0.7948 - val_loss: 0.4527 - val_accuracy: 0.8247\n",
            "Epoch 65/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4208 - accuracy: 0.7932 - val_loss: 0.4527 - val_accuracy: 0.8052\n",
            "Epoch 66/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4206 - accuracy: 0.7932 - val_loss: 0.4525 - val_accuracy: 0.8052\n",
            "Epoch 67/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4203 - accuracy: 0.7932 - val_loss: 0.4530 - val_accuracy: 0.8117\n",
            "Epoch 68/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4207 - accuracy: 0.7899 - val_loss: 0.4533 - val_accuracy: 0.8117\n",
            "Epoch 69/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4204 - accuracy: 0.7964 - val_loss: 0.4550 - val_accuracy: 0.7922\n",
            "Epoch 70/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4199 - accuracy: 0.7948 - val_loss: 0.4559 - val_accuracy: 0.7857\n",
            "Epoch 71/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4190 - accuracy: 0.7980 - val_loss: 0.4553 - val_accuracy: 0.7857\n",
            "Epoch 72/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4187 - accuracy: 0.8013 - val_loss: 0.4549 - val_accuracy: 0.7922\n",
            "Epoch 73/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4188 - accuracy: 0.7980 - val_loss: 0.4543 - val_accuracy: 0.8052\n",
            "Epoch 74/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4185 - accuracy: 0.8013 - val_loss: 0.4538 - val_accuracy: 0.7987\n",
            "Epoch 75/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4183 - accuracy: 0.8046 - val_loss: 0.4546 - val_accuracy: 0.7987\n",
            "Epoch 76/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4177 - accuracy: 0.7964 - val_loss: 0.4541 - val_accuracy: 0.7987\n",
            "Epoch 77/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4174 - accuracy: 0.7997 - val_loss: 0.4546 - val_accuracy: 0.7987\n",
            "Epoch 78/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4170 - accuracy: 0.7997 - val_loss: 0.4539 - val_accuracy: 0.7987\n",
            "Epoch 79/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4170 - accuracy: 0.7899 - val_loss: 0.4539 - val_accuracy: 0.8052\n",
            "Epoch 80/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4162 - accuracy: 0.7948 - val_loss: 0.4540 - val_accuracy: 0.8052\n",
            "Epoch 81/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4156 - accuracy: 0.7980 - val_loss: 0.4552 - val_accuracy: 0.8052\n",
            "Epoch 82/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4156 - accuracy: 0.8013 - val_loss: 0.4563 - val_accuracy: 0.7987\n",
            "Epoch 83/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4153 - accuracy: 0.8062 - val_loss: 0.4556 - val_accuracy: 0.8117\n",
            "Epoch 84/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4150 - accuracy: 0.7997 - val_loss: 0.4542 - val_accuracy: 0.7987\n",
            "Epoch 85/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4143 - accuracy: 0.8029 - val_loss: 0.4544 - val_accuracy: 0.8052\n",
            "Epoch 86/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4148 - accuracy: 0.8046 - val_loss: 0.4550 - val_accuracy: 0.7922\n",
            "Epoch 87/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4150 - accuracy: 0.8029 - val_loss: 0.4547 - val_accuracy: 0.8117\n",
            "Epoch 88/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4142 - accuracy: 0.8078 - val_loss: 0.4556 - val_accuracy: 0.7987\n",
            "Epoch 89/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4138 - accuracy: 0.8046 - val_loss: 0.4554 - val_accuracy: 0.7922\n",
            "Epoch 90/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4132 - accuracy: 0.8094 - val_loss: 0.4564 - val_accuracy: 0.7922\n",
            "Epoch 91/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4134 - accuracy: 0.8062 - val_loss: 0.4558 - val_accuracy: 0.7987\n",
            "Epoch 92/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4129 - accuracy: 0.8094 - val_loss: 0.4558 - val_accuracy: 0.8052\n",
            "Epoch 93/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4127 - accuracy: 0.8111 - val_loss: 0.4552 - val_accuracy: 0.8182\n",
            "Epoch 94/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4125 - accuracy: 0.8046 - val_loss: 0.4552 - val_accuracy: 0.8182\n",
            "Epoch 95/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4122 - accuracy: 0.8029 - val_loss: 0.4536 - val_accuracy: 0.8117\n",
            "Epoch 96/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4115 - accuracy: 0.8046 - val_loss: 0.4546 - val_accuracy: 0.8052\n",
            "Epoch 97/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4113 - accuracy: 0.8078 - val_loss: 0.4550 - val_accuracy: 0.7922\n",
            "Epoch 98/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4113 - accuracy: 0.8062 - val_loss: 0.4543 - val_accuracy: 0.7987\n",
            "Epoch 99/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4115 - accuracy: 0.8078 - val_loss: 0.4548 - val_accuracy: 0.8117\n",
            "Epoch 100/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4108 - accuracy: 0.8094 - val_loss: 0.4550 - val_accuracy: 0.8052\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.History at 0x78b5bae1d450>"
            ]
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# TUNING no of units in each layer\n"
      ],
      "metadata": {
        "id": "q_4wQt-LpNrK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def build_model(hp):\n",
        "  model=Sequential()\n",
        "  units=hp.Int('units',min_value=8,max_value=128,step=8)\n",
        "  model.add(Dense(units=units,activation='relu',input_dim=8))\n",
        "  model.add(Dense(1,activation='sigmoid'))\n",
        "  model.compile(optimizer='rmsprop',loss='binary_crossentropy',\n",
        "                metrics=['accuracy'])\n",
        "  return  model\n"
      ],
      "metadata": {
        "id": "Awz_AOKCd2yi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner=kt.RandomSearch(build_model,\n",
        "                      objective='val_accuracy',\n",
        "                      max_trials=5,\n",
        "                      directory='mydir',\n",
        "                      project_name='srk'\n",
        "    )"
      ],
      "metadata": {
        "id": "DdDzmKVue_OT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.search(X_train,y_train,epochs=5,\n",
        "             validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ORen-8W9ffBL",
        "outputId": "e3cf6e55-adce-418b-a9fc-e0f7fa6924dc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Trial 5 Complete [00h 00m 02s]\n",
            "val_accuracy: 0.798701286315918\n",
            "\n",
            "Best val_accuracy So Far: 0.798701286315918\n",
            "Total elapsed time: 00h 00m 12s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.get_best_hyperparameters()[0].values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LJi2E4CYfprD",
        "outputId": "df38500b-4358-47ce-daa5-0ab235b7d69d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'units': 24}"
            ]
          },
          "metadata": {},
          "execution_count": 26
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model=tuner.get_best_models(num_models=1)[0]"
      ],
      "metadata": {
        "id": "kuyHSCiQgrID"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(X_train,y_train,epochs=100,initial_epoch=6,\n",
        "          validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "G-scjbBggvaD",
        "outputId": "097be6a6-2689-49df-a054-1822bd532cc1"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 7/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4276 - accuracy: 0.7883 - val_loss: 0.4808 - val_accuracy: 0.8052\n",
            "Epoch 8/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4273 - accuracy: 0.7850 - val_loss: 0.4819 - val_accuracy: 0.7987\n",
            "Epoch 9/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4267 - accuracy: 0.7850 - val_loss: 0.4811 - val_accuracy: 0.8052\n",
            "Epoch 10/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4267 - accuracy: 0.7850 - val_loss: 0.4820 - val_accuracy: 0.8052\n",
            "Epoch 11/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4264 - accuracy: 0.7883 - val_loss: 0.4821 - val_accuracy: 0.8052\n",
            "Epoch 12/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4260 - accuracy: 0.7883 - val_loss: 0.4812 - val_accuracy: 0.8052\n",
            "Epoch 13/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4259 - accuracy: 0.7964 - val_loss: 0.4806 - val_accuracy: 0.7987\n",
            "Epoch 14/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4255 - accuracy: 0.7866 - val_loss: 0.4810 - val_accuracy: 0.7987\n",
            "Epoch 15/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4254 - accuracy: 0.7850 - val_loss: 0.4805 - val_accuracy: 0.8052\n",
            "Epoch 16/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4249 - accuracy: 0.7850 - val_loss: 0.4816 - val_accuracy: 0.7987\n",
            "Epoch 17/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4250 - accuracy: 0.7883 - val_loss: 0.4812 - val_accuracy: 0.7987\n",
            "Epoch 18/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4244 - accuracy: 0.7899 - val_loss: 0.4810 - val_accuracy: 0.7987\n",
            "Epoch 19/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4248 - accuracy: 0.7948 - val_loss: 0.4806 - val_accuracy: 0.8117\n",
            "Epoch 20/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4245 - accuracy: 0.7899 - val_loss: 0.4806 - val_accuracy: 0.8052\n",
            "Epoch 21/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4238 - accuracy: 0.7915 - val_loss: 0.4818 - val_accuracy: 0.7987\n",
            "Epoch 22/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4240 - accuracy: 0.7883 - val_loss: 0.4815 - val_accuracy: 0.7987\n",
            "Epoch 23/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4232 - accuracy: 0.7883 - val_loss: 0.4816 - val_accuracy: 0.7987\n",
            "Epoch 24/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4233 - accuracy: 0.7850 - val_loss: 0.4820 - val_accuracy: 0.8052\n",
            "Epoch 25/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4229 - accuracy: 0.7932 - val_loss: 0.4825 - val_accuracy: 0.8052\n",
            "Epoch 26/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4229 - accuracy: 0.7964 - val_loss: 0.4832 - val_accuracy: 0.8052\n",
            "Epoch 27/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4224 - accuracy: 0.7899 - val_loss: 0.4826 - val_accuracy: 0.8052\n",
            "Epoch 28/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4223 - accuracy: 0.7899 - val_loss: 0.4833 - val_accuracy: 0.7987\n",
            "Epoch 29/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4219 - accuracy: 0.7883 - val_loss: 0.4830 - val_accuracy: 0.8052\n",
            "Epoch 30/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4218 - accuracy: 0.7915 - val_loss: 0.4843 - val_accuracy: 0.7987\n",
            "Epoch 31/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4215 - accuracy: 0.7899 - val_loss: 0.4832 - val_accuracy: 0.7922\n",
            "Epoch 32/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4210 - accuracy: 0.7866 - val_loss: 0.4832 - val_accuracy: 0.7922\n",
            "Epoch 33/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4210 - accuracy: 0.7850 - val_loss: 0.4828 - val_accuracy: 0.7922\n",
            "Epoch 34/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4207 - accuracy: 0.7915 - val_loss: 0.4829 - val_accuracy: 0.7987\n",
            "Epoch 35/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4207 - accuracy: 0.7850 - val_loss: 0.4824 - val_accuracy: 0.7922\n",
            "Epoch 36/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4204 - accuracy: 0.7899 - val_loss: 0.4819 - val_accuracy: 0.7922\n",
            "Epoch 37/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4203 - accuracy: 0.7948 - val_loss: 0.4804 - val_accuracy: 0.7922\n",
            "Epoch 38/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4198 - accuracy: 0.7932 - val_loss: 0.4804 - val_accuracy: 0.7922\n",
            "Epoch 39/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4195 - accuracy: 0.7899 - val_loss: 0.4815 - val_accuracy: 0.7987\n",
            "Epoch 40/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4195 - accuracy: 0.7883 - val_loss: 0.4818 - val_accuracy: 0.7987\n",
            "Epoch 41/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4191 - accuracy: 0.7899 - val_loss: 0.4810 - val_accuracy: 0.7987\n",
            "Epoch 42/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4189 - accuracy: 0.7915 - val_loss: 0.4797 - val_accuracy: 0.7987\n",
            "Epoch 43/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4183 - accuracy: 0.7964 - val_loss: 0.4809 - val_accuracy: 0.7987\n",
            "Epoch 44/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4189 - accuracy: 0.7932 - val_loss: 0.4815 - val_accuracy: 0.7987\n",
            "Epoch 45/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4180 - accuracy: 0.7997 - val_loss: 0.4821 - val_accuracy: 0.7987\n",
            "Epoch 46/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4180 - accuracy: 0.7980 - val_loss: 0.4806 - val_accuracy: 0.7987\n",
            "Epoch 47/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4180 - accuracy: 0.7964 - val_loss: 0.4814 - val_accuracy: 0.7987\n",
            "Epoch 48/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4175 - accuracy: 0.7997 - val_loss: 0.4824 - val_accuracy: 0.7987\n",
            "Epoch 49/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4173 - accuracy: 0.7964 - val_loss: 0.4805 - val_accuracy: 0.7987\n",
            "Epoch 50/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4171 - accuracy: 0.7980 - val_loss: 0.4808 - val_accuracy: 0.7987\n",
            "Epoch 51/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4168 - accuracy: 0.7980 - val_loss: 0.4823 - val_accuracy: 0.8052\n",
            "Epoch 52/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4165 - accuracy: 0.7948 - val_loss: 0.4815 - val_accuracy: 0.7987\n",
            "Epoch 53/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4166 - accuracy: 0.7980 - val_loss: 0.4819 - val_accuracy: 0.8052\n",
            "Epoch 54/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4158 - accuracy: 0.7964 - val_loss: 0.4805 - val_accuracy: 0.8052\n",
            "Epoch 55/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4158 - accuracy: 0.7915 - val_loss: 0.4815 - val_accuracy: 0.8052\n",
            "Epoch 56/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4154 - accuracy: 0.7980 - val_loss: 0.4824 - val_accuracy: 0.8052\n",
            "Epoch 57/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4154 - accuracy: 0.7948 - val_loss: 0.4819 - val_accuracy: 0.8052\n",
            "Epoch 58/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4150 - accuracy: 0.8029 - val_loss: 0.4820 - val_accuracy: 0.8052\n",
            "Epoch 59/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4151 - accuracy: 0.7964 - val_loss: 0.4819 - val_accuracy: 0.8052\n",
            "Epoch 60/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4150 - accuracy: 0.7980 - val_loss: 0.4824 - val_accuracy: 0.8052\n",
            "Epoch 61/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4150 - accuracy: 0.7915 - val_loss: 0.4817 - val_accuracy: 0.8052\n",
            "Epoch 62/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4144 - accuracy: 0.7997 - val_loss: 0.4814 - val_accuracy: 0.8052\n",
            "Epoch 63/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4145 - accuracy: 0.7964 - val_loss: 0.4819 - val_accuracy: 0.8052\n",
            "Epoch 64/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4139 - accuracy: 0.7980 - val_loss: 0.4823 - val_accuracy: 0.8052\n",
            "Epoch 65/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4138 - accuracy: 0.7980 - val_loss: 0.4821 - val_accuracy: 0.8052\n",
            "Epoch 66/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4138 - accuracy: 0.7964 - val_loss: 0.4823 - val_accuracy: 0.8052\n",
            "Epoch 67/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4138 - accuracy: 0.7980 - val_loss: 0.4830 - val_accuracy: 0.8052\n",
            "Epoch 68/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4133 - accuracy: 0.7997 - val_loss: 0.4843 - val_accuracy: 0.8052\n",
            "Epoch 69/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4132 - accuracy: 0.7980 - val_loss: 0.4845 - val_accuracy: 0.8052\n",
            "Epoch 70/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4131 - accuracy: 0.7997 - val_loss: 0.4830 - val_accuracy: 0.8117\n",
            "Epoch 71/100\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.4124 - accuracy: 0.7997 - val_loss: 0.4828 - val_accuracy: 0.8117\n",
            "Epoch 72/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4125 - accuracy: 0.8029 - val_loss: 0.4828 - val_accuracy: 0.8117\n",
            "Epoch 73/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4124 - accuracy: 0.8013 - val_loss: 0.4835 - val_accuracy: 0.8052\n",
            "Epoch 74/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4122 - accuracy: 0.7964 - val_loss: 0.4825 - val_accuracy: 0.8052\n",
            "Epoch 75/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4118 - accuracy: 0.8029 - val_loss: 0.4817 - val_accuracy: 0.8052\n",
            "Epoch 76/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4118 - accuracy: 0.8029 - val_loss: 0.4817 - val_accuracy: 0.8052\n",
            "Epoch 77/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4117 - accuracy: 0.7997 - val_loss: 0.4820 - val_accuracy: 0.8052\n",
            "Epoch 78/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4114 - accuracy: 0.8029 - val_loss: 0.4813 - val_accuracy: 0.8052\n",
            "Epoch 79/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4114 - accuracy: 0.7980 - val_loss: 0.4815 - val_accuracy: 0.8117\n",
            "Epoch 80/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4112 - accuracy: 0.8013 - val_loss: 0.4822 - val_accuracy: 0.8052\n",
            "Epoch 81/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4105 - accuracy: 0.8013 - val_loss: 0.4823 - val_accuracy: 0.8052\n",
            "Epoch 82/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4109 - accuracy: 0.8013 - val_loss: 0.4828 - val_accuracy: 0.8052\n",
            "Epoch 83/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4105 - accuracy: 0.8013 - val_loss: 0.4831 - val_accuracy: 0.8117\n",
            "Epoch 84/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4104 - accuracy: 0.8013 - val_loss: 0.4822 - val_accuracy: 0.8117\n",
            "Epoch 85/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4099 - accuracy: 0.8062 - val_loss: 0.4825 - val_accuracy: 0.8117\n",
            "Epoch 86/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4099 - accuracy: 0.8078 - val_loss: 0.4836 - val_accuracy: 0.8117\n",
            "Epoch 87/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4099 - accuracy: 0.8062 - val_loss: 0.4838 - val_accuracy: 0.8117\n",
            "Epoch 88/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4095 - accuracy: 0.8062 - val_loss: 0.4824 - val_accuracy: 0.8117\n",
            "Epoch 89/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4093 - accuracy: 0.8013 - val_loss: 0.4818 - val_accuracy: 0.8117\n",
            "Epoch 90/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4093 - accuracy: 0.8046 - val_loss: 0.4819 - val_accuracy: 0.8117\n",
            "Epoch 91/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4092 - accuracy: 0.8013 - val_loss: 0.4816 - val_accuracy: 0.8117\n",
            "Epoch 92/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4086 - accuracy: 0.8029 - val_loss: 0.4806 - val_accuracy: 0.8117\n",
            "Epoch 93/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4088 - accuracy: 0.8029 - val_loss: 0.4817 - val_accuracy: 0.8117\n",
            "Epoch 94/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4086 - accuracy: 0.8094 - val_loss: 0.4816 - val_accuracy: 0.8117\n",
            "Epoch 95/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4084 - accuracy: 0.8046 - val_loss: 0.4802 - val_accuracy: 0.8117\n",
            "Epoch 96/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4079 - accuracy: 0.8046 - val_loss: 0.4795 - val_accuracy: 0.8117\n",
            "Epoch 97/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4081 - accuracy: 0.8078 - val_loss: 0.4800 - val_accuracy: 0.8117\n",
            "Epoch 98/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4077 - accuracy: 0.8062 - val_loss: 0.4796 - val_accuracy: 0.8117\n",
            "Epoch 99/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4077 - accuracy: 0.8094 - val_loss: 0.4796 - val_accuracy: 0.8117\n",
            "Epoch 100/100\n",
            "20/20 [==============================] - 0s 3ms/step - loss: 0.4075 - accuracy: 0.8078 - val_loss: 0.4802 - val_accuracy: 0.8117\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.History at 0x78b5bbe5e8f0>"
            ]
          },
          "metadata": {},
          "execution_count": 29
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "  # TUNIG no of layers in network\n",
        "  def build_model(hp):\n",
        "   model=Sequential()\n",
        "   model.add(Dense(72,activation='relu',input_dim=8))\n",
        "   for i in range(hp.Int('num_layers',min_value=1,max_value=11)):\n",
        "     model.add(Dense(72,activation='relu'))\n",
        "   model.add(Dense(1,activation='sigmoid'))\n",
        "   model.compile(optimizer='rmsprop',loss='binary_crossentropy',\n",
        "                metrics=['accuracy'])\n",
        "   return  model"
      ],
      "metadata": {
        "id": "H--A5-log3ZT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner=kt.RandomSearch(build_model,\n",
        "                      objective='val_accuracy',\n",
        "                      max_trials=5,\n",
        "                      directory='mydir',\n",
        "                      project_name='num_layers'\n",
        "    )"
      ],
      "metadata": {
        "id": "tIxUW8vuia6q"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.search(X_train,y_train,epochs=5,\n",
        "             validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vYQzXIHCi30j",
        "outputId": "70c6ac6a-c195-4ccd-bed0-f57b8e76c7bc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Trial 5 Complete [00h 00m 02s]\n",
            "val_accuracy: 0.8246753215789795\n",
            "\n",
            "Best val_accuracy So Far: 0.8246753215789795\n",
            "Total elapsed time: 00h 00m 15s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.get_best_hyperparameters()[0].values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VD4eMEzVi6hD",
        "outputId": "a0c37587-df51-4005-a36d-7136b196b51d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'num_layers': 5}"
            ]
          },
          "metadata": {},
          "execution_count": 34
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model=tuner.get_best_models(num_models=1)[0]"
      ],
      "metadata": {
        "id": "8oKzexgcjDBy"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(X_train,y_train,epochs=100,initial_epoch=6,\n",
        "          validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MIxRKskKjFMj",
        "outputId": "b7e854dd-5644-4f22-b723-7924a8cae279"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 7/100\n",
            "20/20 [==============================] - 2s 22ms/step - loss: 0.4374 - accuracy: 0.7915 - val_loss: 0.4678 - val_accuracy: 0.8247\n",
            "Epoch 8/100\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.4277 - accuracy: 0.8029 - val_loss: 0.5061 - val_accuracy: 0.7662\n",
            "Epoch 9/100\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.4191 - accuracy: 0.7980 - val_loss: 0.4840 - val_accuracy: 0.7857\n",
            "Epoch 10/100\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.4101 - accuracy: 0.8111 - val_loss: 0.4667 - val_accuracy: 0.8117\n",
            "Epoch 11/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4050 - accuracy: 0.8013 - val_loss: 0.4567 - val_accuracy: 0.8312\n",
            "Epoch 12/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.3941 - accuracy: 0.8257 - val_loss: 0.4590 - val_accuracy: 0.8182\n",
            "Epoch 13/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.3849 - accuracy: 0.8241 - val_loss: 0.5230 - val_accuracy: 0.7662\n",
            "Epoch 14/100\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3773 - accuracy: 0.8290 - val_loss: 0.4654 - val_accuracy: 0.7857\n",
            "Epoch 15/100\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.3786 - accuracy: 0.8257 - val_loss: 0.4879 - val_accuracy: 0.7857\n",
            "Epoch 16/100\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3625 - accuracy: 0.8453 - val_loss: 0.5304 - val_accuracy: 0.7792\n",
            "Epoch 17/100\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3522 - accuracy: 0.8616 - val_loss: 0.5006 - val_accuracy: 0.7792\n",
            "Epoch 18/100\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3427 - accuracy: 0.8534 - val_loss: 0.5689 - val_accuracy: 0.7792\n",
            "Epoch 19/100\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3213 - accuracy: 0.8697 - val_loss: 0.6126 - val_accuracy: 0.7403\n",
            "Epoch 20/100\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3194 - accuracy: 0.8583 - val_loss: 0.5619 - val_accuracy: 0.7468\n",
            "Epoch 21/100\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3100 - accuracy: 0.8795 - val_loss: 0.5443 - val_accuracy: 0.7792\n",
            "Epoch 22/100\n",
            "20/20 [==============================] - 0s 9ms/step - loss: 0.3013 - accuracy: 0.8746 - val_loss: 0.5379 - val_accuracy: 0.7792\n",
            "Epoch 23/100\n",
            "20/20 [==============================] - 0s 10ms/step - loss: 0.2769 - accuracy: 0.8876 - val_loss: 0.7885 - val_accuracy: 0.6364\n",
            "Epoch 24/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2993 - accuracy: 0.8779 - val_loss: 0.6036 - val_accuracy: 0.7597\n",
            "Epoch 25/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2536 - accuracy: 0.8974 - val_loss: 0.6204 - val_accuracy: 0.7273\n",
            "Epoch 26/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2750 - accuracy: 0.8860 - val_loss: 0.6518 - val_accuracy: 0.7597\n",
            "Epoch 27/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2179 - accuracy: 0.9283 - val_loss: 0.6873 - val_accuracy: 0.7597\n",
            "Epoch 28/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2385 - accuracy: 0.9104 - val_loss: 0.6403 - val_accuracy: 0.7597\n",
            "Epoch 29/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2256 - accuracy: 0.9121 - val_loss: 0.6991 - val_accuracy: 0.7532\n",
            "Epoch 30/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1939 - accuracy: 0.9381 - val_loss: 0.7440 - val_accuracy: 0.7273\n",
            "Epoch 31/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2254 - accuracy: 0.9202 - val_loss: 0.8054 - val_accuracy: 0.7468\n",
            "Epoch 32/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1948 - accuracy: 0.9316 - val_loss: 0.9085 - val_accuracy: 0.6753\n",
            "Epoch 33/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1799 - accuracy: 0.9349 - val_loss: 0.7580 - val_accuracy: 0.7403\n",
            "Epoch 34/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1668 - accuracy: 0.9463 - val_loss: 0.8760 - val_accuracy: 0.7597\n",
            "Epoch 35/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1804 - accuracy: 0.9349 - val_loss: 0.8233 - val_accuracy: 0.7662\n",
            "Epoch 36/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1449 - accuracy: 0.9560 - val_loss: 1.1906 - val_accuracy: 0.6429\n",
            "Epoch 37/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1598 - accuracy: 0.9495 - val_loss: 0.9984 - val_accuracy: 0.7078\n",
            "Epoch 38/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1414 - accuracy: 0.9560 - val_loss: 0.9304 - val_accuracy: 0.7143\n",
            "Epoch 39/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1200 - accuracy: 0.9609 - val_loss: 1.1813 - val_accuracy: 0.7013\n",
            "Epoch 40/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1427 - accuracy: 0.9511 - val_loss: 1.0181 - val_accuracy: 0.7143\n",
            "Epoch 41/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0952 - accuracy: 0.9674 - val_loss: 1.1034 - val_accuracy: 0.7143\n",
            "Epoch 42/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1398 - accuracy: 0.9511 - val_loss: 1.1094 - val_accuracy: 0.6948\n",
            "Epoch 43/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1027 - accuracy: 0.9658 - val_loss: 1.0417 - val_accuracy: 0.7013\n",
            "Epoch 44/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0822 - accuracy: 0.9739 - val_loss: 1.3058 - val_accuracy: 0.6818\n",
            "Epoch 45/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0664 - accuracy: 0.9886 - val_loss: 1.2959 - val_accuracy: 0.7273\n",
            "Epoch 46/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1410 - accuracy: 0.9463 - val_loss: 1.3177 - val_accuracy: 0.7078\n",
            "Epoch 47/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0727 - accuracy: 0.9756 - val_loss: 1.2603 - val_accuracy: 0.6688\n",
            "Epoch 48/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0702 - accuracy: 0.9739 - val_loss: 1.2570 - val_accuracy: 0.7403\n",
            "Epoch 49/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0993 - accuracy: 0.9625 - val_loss: 1.4330 - val_accuracy: 0.6429\n",
            "Epoch 50/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0568 - accuracy: 0.9870 - val_loss: 1.5652 - val_accuracy: 0.6558\n",
            "Epoch 51/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0824 - accuracy: 0.9691 - val_loss: 1.2644 - val_accuracy: 0.7273\n",
            "Epoch 52/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0330 - accuracy: 0.9902 - val_loss: 1.5042 - val_accuracy: 0.7273\n",
            "Epoch 53/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0820 - accuracy: 0.9723 - val_loss: 1.5434 - val_accuracy: 0.6818\n",
            "Epoch 54/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0580 - accuracy: 0.9772 - val_loss: 1.5009 - val_accuracy: 0.6818\n",
            "Epoch 55/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0974 - accuracy: 0.9739 - val_loss: 1.5946 - val_accuracy: 0.7468\n",
            "Epoch 56/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0404 - accuracy: 0.9853 - val_loss: 1.4638 - val_accuracy: 0.7208\n",
            "Epoch 57/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0308 - accuracy: 0.9919 - val_loss: 1.5882 - val_accuracy: 0.6883\n",
            "Epoch 58/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0761 - accuracy: 0.9691 - val_loss: 1.5316 - val_accuracy: 0.7208\n",
            "Epoch 59/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0390 - accuracy: 0.9821 - val_loss: 1.5160 - val_accuracy: 0.7143\n",
            "Epoch 60/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0165 - accuracy: 0.9967 - val_loss: 1.6371 - val_accuracy: 0.7143\n",
            "Epoch 61/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0420 - accuracy: 0.9853 - val_loss: 1.8655 - val_accuracy: 0.7273\n",
            "Epoch 62/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0377 - accuracy: 0.9821 - val_loss: 2.0154 - val_accuracy: 0.6299\n",
            "Epoch 63/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0640 - accuracy: 0.9837 - val_loss: 1.7471 - val_accuracy: 0.6753\n",
            "Epoch 64/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0477 - accuracy: 0.9870 - val_loss: 1.8600 - val_accuracy: 0.7143\n",
            "Epoch 65/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0209 - accuracy: 0.9935 - val_loss: 1.8414 - val_accuracy: 0.7273\n",
            "Epoch 66/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0923 - accuracy: 0.9756 - val_loss: 1.9351 - val_accuracy: 0.6818\n",
            "Epoch 67/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0585 - accuracy: 0.9805 - val_loss: 1.7843 - val_accuracy: 0.6883\n",
            "Epoch 68/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0060 - accuracy: 1.0000 - val_loss: 1.8421 - val_accuracy: 0.6818\n",
            "Epoch 69/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0558 - accuracy: 0.9853 - val_loss: 1.7290 - val_accuracy: 0.7662\n",
            "Epoch 70/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0423 - accuracy: 0.9821 - val_loss: 1.8767 - val_accuracy: 0.6753\n",
            "Epoch 71/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0358 - accuracy: 0.9919 - val_loss: 1.8018 - val_accuracy: 0.6948\n",
            "Epoch 72/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0416 - accuracy: 0.9772 - val_loss: 1.9626 - val_accuracy: 0.7078\n",
            "Epoch 73/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0212 - accuracy: 0.9935 - val_loss: 2.0520 - val_accuracy: 0.6883\n",
            "Epoch 74/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0046 - accuracy: 1.0000 - val_loss: 2.4131 - val_accuracy: 0.6818\n",
            "Epoch 75/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0611 - accuracy: 0.9805 - val_loss: 2.3608 - val_accuracy: 0.7013\n",
            "Epoch 76/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0302 - accuracy: 0.9935 - val_loss: 2.0492 - val_accuracy: 0.6948\n",
            "Epoch 77/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0037 - accuracy: 1.0000 - val_loss: 1.9942 - val_accuracy: 0.6818\n",
            "Epoch 78/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0017 - accuracy: 1.0000 - val_loss: 2.3173 - val_accuracy: 0.7013\n",
            "Epoch 79/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0999 - accuracy: 0.9739 - val_loss: 2.0053 - val_accuracy: 0.7208\n",
            "Epoch 80/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0031 - accuracy: 1.0000 - val_loss: 2.0278 - val_accuracy: 0.7403\n",
            "Epoch 81/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0165 - accuracy: 0.9919 - val_loss: 2.2310 - val_accuracy: 0.7143\n",
            "Epoch 82/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0443 - accuracy: 0.9870 - val_loss: 2.1512 - val_accuracy: 0.7208\n",
            "Epoch 83/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0255 - accuracy: 0.9902 - val_loss: 2.1058 - val_accuracy: 0.7143\n",
            "Epoch 84/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0015 - accuracy: 1.0000 - val_loss: 2.2367 - val_accuracy: 0.7078\n",
            "Epoch 85/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0122 - accuracy: 0.9951 - val_loss: 2.2899 - val_accuracy: 0.7208\n",
            "Epoch 86/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0531 - accuracy: 0.9837 - val_loss: 2.4127 - val_accuracy: 0.6948\n",
            "Epoch 87/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0107 - accuracy: 0.9967 - val_loss: 2.1879 - val_accuracy: 0.7143\n",
            "Epoch 88/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 2.3118 - val_accuracy: 0.6948\n",
            "Epoch 89/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 8.9331e-04 - accuracy: 1.0000 - val_loss: 2.3041 - val_accuracy: 0.7078\n",
            "Epoch 90/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0422 - accuracy: 0.9886 - val_loss: 2.2491 - val_accuracy: 0.6948\n",
            "Epoch 91/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0062 - accuracy: 1.0000 - val_loss: 2.1906 - val_accuracy: 0.7143\n",
            "Epoch 92/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 4.6418e-04 - accuracy: 1.0000 - val_loss: 2.2866 - val_accuracy: 0.7078\n",
            "Epoch 93/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 3.1821e-04 - accuracy: 1.0000 - val_loss: 2.4253 - val_accuracy: 0.7143\n",
            "Epoch 94/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0361 - accuracy: 0.9886 - val_loss: 2.5027 - val_accuracy: 0.7078\n",
            "Epoch 95/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0556 - accuracy: 0.9853 - val_loss: 2.5065 - val_accuracy: 0.6753\n",
            "Epoch 96/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.0012 - accuracy: 1.0000 - val_loss: 2.6009 - val_accuracy: 0.6883\n",
            "Epoch 97/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 5.6389e-04 - accuracy: 1.0000 - val_loss: 2.5791 - val_accuracy: 0.6948\n",
            "Epoch 98/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0110 - accuracy: 0.9967 - val_loss: 2.6020 - val_accuracy: 0.7338\n",
            "Epoch 99/100\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.0310 - accuracy: 0.9902 - val_loss: 2.4985 - val_accuracy: 0.6883\n",
            "Epoch 100/100\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 4.1883e-04 - accuracy: 1.0000 - val_loss: 2.5583 - val_accuracy: 0.7078\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.History at 0x78b5bbecd0f0>"
            ]
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Above model is highly overfitted if num of layers is taken is 5\n",
        "# Now build different model with all tuning combined\n",
        "def build_model(hp):\n",
        "  model=Sequential()\n",
        "  counter=0;\n",
        "  for i in range(hp.Int('num_layers',min_value=1,max_value=10)):\n",
        "    if counter==0:\n",
        "      model.add( Dense( hp.Int('units'+str(i),min_value=8,max_value=128,step=8),activation=hp.Choice('activation'+str(i),values=['relu','tanh','sigmoid']),input_dim=8 ))\n",
        "    else:\n",
        "       model.add( Dense(hp.Int('units'+str(i),min_value=8,max_value=128,step=8),activation=hp.Choice('activation'+str(i),values=['relu','tanh','sigmoid'])))\n",
        "    counter+=1\n",
        "  model.add(Dense(1,activation='sigmoid'))\n",
        "  model.compile(optimizer=hp.Choice('optimizer',values=['rmsprop','adam','sgd','nadam','adadelta']),\n",
        "                loss='binary_crossentropy',\n",
        "                metrics=['accuracy']\n",
        "                )\n",
        "  return  model"
      ],
      "metadata": {
        "id": "qEIwusy-jIwT"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner=kt.RandomSearch(build_model,\n",
        "                      objective='val_accuracy',\n",
        "                      max_trials=3,\n",
        "                      directory='mydir',\n",
        "                      project_name='final_correct3' )"
      ],
      "metadata": {
        "id": "G8HOpF-smIIi"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.search(X_train,y_train,epochs=5,\n",
        "             validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3gfPcy5Ml92F",
        "outputId": "f44ea562-5a93-4a92-e0a9-1eca23c80945"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Trial 3 Complete [00h 00m 02s]\n",
            "val_accuracy: 0.7207792401313782\n",
            "\n",
            "Best val_accuracy So Far: 0.7922077775001526\n",
            "Total elapsed time: 00h 00m 10s\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tuner.get_best_hyperparameters()[0].values"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IWJSjtD2pERU",
        "outputId": "52161b79-35ab-482a-b77c-aefc8dde4248"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "{'num_layers': 8,\n",
              " 'units0': 128,\n",
              " 'activation0': 'tanh',\n",
              " 'optimizer': 'rmsprop',\n",
              " 'units1': 112,\n",
              " 'activation1': 'sigmoid',\n",
              " 'units2': 80,\n",
              " 'activation2': 'tanh',\n",
              " 'units3': 56,\n",
              " 'activation3': 'tanh',\n",
              " 'units4': 64,\n",
              " 'activation4': 'relu',\n",
              " 'units5': 56,\n",
              " 'activation5': 'relu',\n",
              " 'units6': 40,\n",
              " 'activation6': 'relu',\n",
              " 'units7': 40,\n",
              " 'activation7': 'relu',\n",
              " 'units8': 120,\n",
              " 'activation8': 'sigmoid',\n",
              " 'units9': 128,\n",
              " 'activation9': 'tanh'}"
            ]
          },
          "metadata": {},
          "execution_count": 71
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "model=tuner.get_best_models(num_models=1)[0]"
      ],
      "metadata": {
        "id": "e8yA3j6bpMKU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(X_train,y_train,epochs=150,initial_epoch=6,\n",
        "          validation_data=(X_test,y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "SoDkqK-isa4F",
        "outputId": "533b21f9-3295-49d8-e2d2-52cfe3c41174"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 7/150\n",
            "20/20 [==============================] - 1s 16ms/step - loss: 0.4907 - accuracy: 0.7590 - val_loss: 0.4818 - val_accuracy: 0.8052\n",
            "Epoch 8/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4855 - accuracy: 0.7704 - val_loss: 0.5059 - val_accuracy: 0.7727\n",
            "Epoch 9/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4889 - accuracy: 0.7638 - val_loss: 0.4880 - val_accuracy: 0.7792\n",
            "Epoch 10/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4862 - accuracy: 0.7622 - val_loss: 0.4831 - val_accuracy: 0.8182\n",
            "Epoch 11/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4806 - accuracy: 0.7704 - val_loss: 0.4898 - val_accuracy: 0.7857\n",
            "Epoch 12/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4792 - accuracy: 0.7704 - val_loss: 0.4875 - val_accuracy: 0.7987\n",
            "Epoch 13/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4788 - accuracy: 0.7671 - val_loss: 0.4861 - val_accuracy: 0.7922\n",
            "Epoch 14/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4718 - accuracy: 0.7785 - val_loss: 0.5002 - val_accuracy: 0.7857\n",
            "Epoch 15/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4730 - accuracy: 0.7638 - val_loss: 0.4759 - val_accuracy: 0.7792\n",
            "Epoch 16/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4712 - accuracy: 0.7704 - val_loss: 0.4778 - val_accuracy: 0.7792\n",
            "Epoch 17/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4682 - accuracy: 0.7720 - val_loss: 0.4938 - val_accuracy: 0.7532\n",
            "Epoch 18/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4649 - accuracy: 0.7720 - val_loss: 0.4881 - val_accuracy: 0.7792\n",
            "Epoch 19/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4619 - accuracy: 0.7801 - val_loss: 0.4694 - val_accuracy: 0.7922\n",
            "Epoch 20/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4713 - accuracy: 0.7785 - val_loss: 0.4710 - val_accuracy: 0.7857\n",
            "Epoch 21/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4641 - accuracy: 0.7818 - val_loss: 0.4749 - val_accuracy: 0.7987\n",
            "Epoch 22/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4529 - accuracy: 0.7834 - val_loss: 0.4972 - val_accuracy: 0.7987\n",
            "Epoch 23/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4600 - accuracy: 0.7720 - val_loss: 0.4972 - val_accuracy: 0.7792\n",
            "Epoch 24/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4633 - accuracy: 0.7671 - val_loss: 0.5022 - val_accuracy: 0.7857\n",
            "Epoch 25/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4616 - accuracy: 0.7736 - val_loss: 0.4638 - val_accuracy: 0.7857\n",
            "Epoch 26/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4493 - accuracy: 0.7752 - val_loss: 0.4893 - val_accuracy: 0.7662\n",
            "Epoch 27/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4601 - accuracy: 0.7720 - val_loss: 0.4989 - val_accuracy: 0.7792\n",
            "Epoch 28/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4557 - accuracy: 0.7769 - val_loss: 0.4832 - val_accuracy: 0.7727\n",
            "Epoch 29/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4583 - accuracy: 0.7818 - val_loss: 0.4729 - val_accuracy: 0.7857\n",
            "Epoch 30/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4529 - accuracy: 0.7785 - val_loss: 0.4810 - val_accuracy: 0.7727\n",
            "Epoch 31/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4555 - accuracy: 0.7834 - val_loss: 0.4929 - val_accuracy: 0.7727\n",
            "Epoch 32/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4517 - accuracy: 0.7704 - val_loss: 0.4972 - val_accuracy: 0.7987\n",
            "Epoch 33/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4585 - accuracy: 0.7818 - val_loss: 0.4797 - val_accuracy: 0.7792\n",
            "Epoch 34/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4506 - accuracy: 0.7720 - val_loss: 0.4932 - val_accuracy: 0.7792\n",
            "Epoch 35/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4534 - accuracy: 0.7834 - val_loss: 0.4880 - val_accuracy: 0.7727\n",
            "Epoch 36/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.4491 - accuracy: 0.7818 - val_loss: 0.4843 - val_accuracy: 0.7792\n",
            "Epoch 37/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4512 - accuracy: 0.7801 - val_loss: 0.4946 - val_accuracy: 0.7662\n",
            "Epoch 38/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4522 - accuracy: 0.7818 - val_loss: 0.4773 - val_accuracy: 0.7727\n",
            "Epoch 39/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4476 - accuracy: 0.7785 - val_loss: 0.4779 - val_accuracy: 0.7727\n",
            "Epoch 40/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4551 - accuracy: 0.7850 - val_loss: 0.4867 - val_accuracy: 0.7857\n",
            "Epoch 41/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4433 - accuracy: 0.7818 - val_loss: 0.5355 - val_accuracy: 0.7857\n",
            "Epoch 42/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4475 - accuracy: 0.7834 - val_loss: 0.5197 - val_accuracy: 0.7792\n",
            "Epoch 43/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4498 - accuracy: 0.7720 - val_loss: 0.5029 - val_accuracy: 0.7857\n",
            "Epoch 44/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4442 - accuracy: 0.7866 - val_loss: 0.4920 - val_accuracy: 0.7922\n",
            "Epoch 45/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4496 - accuracy: 0.7818 - val_loss: 0.4926 - val_accuracy: 0.7727\n",
            "Epoch 46/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4459 - accuracy: 0.7850 - val_loss: 0.5038 - val_accuracy: 0.7532\n",
            "Epoch 47/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4437 - accuracy: 0.7834 - val_loss: 0.4916 - val_accuracy: 0.7597\n",
            "Epoch 48/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4471 - accuracy: 0.7785 - val_loss: 0.4840 - val_accuracy: 0.7662\n",
            "Epoch 49/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4360 - accuracy: 0.7899 - val_loss: 0.4951 - val_accuracy: 0.7532\n",
            "Epoch 50/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4419 - accuracy: 0.7834 - val_loss: 0.4815 - val_accuracy: 0.7468\n",
            "Epoch 51/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4383 - accuracy: 0.7866 - val_loss: 0.5140 - val_accuracy: 0.7922\n",
            "Epoch 52/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4424 - accuracy: 0.7883 - val_loss: 0.4881 - val_accuracy: 0.7662\n",
            "Epoch 53/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4368 - accuracy: 0.7866 - val_loss: 0.4942 - val_accuracy: 0.7338\n",
            "Epoch 54/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4324 - accuracy: 0.8029 - val_loss: 0.4889 - val_accuracy: 0.7792\n",
            "Epoch 55/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4352 - accuracy: 0.7980 - val_loss: 0.4721 - val_accuracy: 0.7727\n",
            "Epoch 56/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4272 - accuracy: 0.7883 - val_loss: 0.5007 - val_accuracy: 0.7727\n",
            "Epoch 57/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4354 - accuracy: 0.7964 - val_loss: 0.5184 - val_accuracy: 0.7468\n",
            "Epoch 58/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4295 - accuracy: 0.7964 - val_loss: 0.4942 - val_accuracy: 0.7597\n",
            "Epoch 59/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4338 - accuracy: 0.7883 - val_loss: 0.5124 - val_accuracy: 0.7727\n",
            "Epoch 60/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4289 - accuracy: 0.7964 - val_loss: 0.4747 - val_accuracy: 0.7987\n",
            "Epoch 61/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4282 - accuracy: 0.8013 - val_loss: 0.4941 - val_accuracy: 0.7468\n",
            "Epoch 62/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4203 - accuracy: 0.7964 - val_loss: 0.4974 - val_accuracy: 0.7532\n",
            "Epoch 63/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4286 - accuracy: 0.7915 - val_loss: 0.5025 - val_accuracy: 0.7662\n",
            "Epoch 64/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4240 - accuracy: 0.7915 - val_loss: 0.5104 - val_accuracy: 0.7727\n",
            "Epoch 65/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4251 - accuracy: 0.7932 - val_loss: 0.5134 - val_accuracy: 0.7532\n",
            "Epoch 66/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4257 - accuracy: 0.8046 - val_loss: 0.4962 - val_accuracy: 0.7532\n",
            "Epoch 67/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4161 - accuracy: 0.7932 - val_loss: 0.5112 - val_accuracy: 0.7532\n",
            "Epoch 68/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4198 - accuracy: 0.8078 - val_loss: 0.5249 - val_accuracy: 0.7468\n",
            "Epoch 69/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4215 - accuracy: 0.7964 - val_loss: 0.4935 - val_accuracy: 0.7338\n",
            "Epoch 70/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4153 - accuracy: 0.8111 - val_loss: 0.5047 - val_accuracy: 0.7403\n",
            "Epoch 71/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4099 - accuracy: 0.8013 - val_loss: 0.5358 - val_accuracy: 0.7597\n",
            "Epoch 72/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4134 - accuracy: 0.8078 - val_loss: 0.5346 - val_accuracy: 0.7468\n",
            "Epoch 73/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4162 - accuracy: 0.8029 - val_loss: 0.5425 - val_accuracy: 0.7532\n",
            "Epoch 74/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4121 - accuracy: 0.8062 - val_loss: 0.5140 - val_accuracy: 0.7338\n",
            "Epoch 75/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4053 - accuracy: 0.8176 - val_loss: 0.5083 - val_accuracy: 0.7338\n",
            "Epoch 76/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4063 - accuracy: 0.8111 - val_loss: 0.5015 - val_accuracy: 0.7597\n",
            "Epoch 77/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4041 - accuracy: 0.8127 - val_loss: 0.5354 - val_accuracy: 0.7727\n",
            "Epoch 78/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.4074 - accuracy: 0.7948 - val_loss: 0.5184 - val_accuracy: 0.7662\n",
            "Epoch 79/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.4058 - accuracy: 0.7964 - val_loss: 0.5294 - val_accuracy: 0.7532\n",
            "Epoch 80/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.4043 - accuracy: 0.8029 - val_loss: 0.5113 - val_accuracy: 0.7338\n",
            "Epoch 81/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.3931 - accuracy: 0.8160 - val_loss: 0.5404 - val_accuracy: 0.7468\n",
            "Epoch 82/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.3946 - accuracy: 0.8111 - val_loss: 0.5908 - val_accuracy: 0.7273\n",
            "Epoch 83/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.3924 - accuracy: 0.8176 - val_loss: 0.5441 - val_accuracy: 0.7597\n",
            "Epoch 84/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.3948 - accuracy: 0.8078 - val_loss: 0.5097 - val_accuracy: 0.7597\n",
            "Epoch 85/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.3836 - accuracy: 0.8160 - val_loss: 0.5338 - val_accuracy: 0.7662\n",
            "Epoch 86/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.3931 - accuracy: 0.8160 - val_loss: 0.5222 - val_accuracy: 0.7597\n",
            "Epoch 87/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.3944 - accuracy: 0.8176 - val_loss: 0.5263 - val_accuracy: 0.7597\n",
            "Epoch 88/150\n",
            "20/20 [==============================] - 0s 10ms/step - loss: 0.3857 - accuracy: 0.8225 - val_loss: 0.5099 - val_accuracy: 0.7597\n",
            "Epoch 89/150\n",
            "20/20 [==============================] - 0s 10ms/step - loss: 0.3809 - accuracy: 0.8290 - val_loss: 0.5695 - val_accuracy: 0.7468\n",
            "Epoch 90/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3786 - accuracy: 0.8355 - val_loss: 0.5359 - val_accuracy: 0.7468\n",
            "Epoch 91/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3717 - accuracy: 0.8339 - val_loss: 0.5434 - val_accuracy: 0.7597\n",
            "Epoch 92/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3757 - accuracy: 0.8290 - val_loss: 0.5421 - val_accuracy: 0.7597\n",
            "Epoch 93/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3799 - accuracy: 0.8078 - val_loss: 0.5514 - val_accuracy: 0.7532\n",
            "Epoch 94/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3625 - accuracy: 0.8404 - val_loss: 0.5749 - val_accuracy: 0.7857\n",
            "Epoch 95/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3677 - accuracy: 0.8306 - val_loss: 0.5679 - val_accuracy: 0.7857\n",
            "Epoch 96/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3641 - accuracy: 0.8388 - val_loss: 0.5150 - val_accuracy: 0.7597\n",
            "Epoch 97/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3623 - accuracy: 0.8388 - val_loss: 0.5924 - val_accuracy: 0.7727\n",
            "Epoch 98/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3497 - accuracy: 0.8550 - val_loss: 0.5821 - val_accuracy: 0.7078\n",
            "Epoch 99/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3581 - accuracy: 0.8404 - val_loss: 0.5132 - val_accuracy: 0.7597\n",
            "Epoch 100/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3518 - accuracy: 0.8534 - val_loss: 0.5786 - val_accuracy: 0.7727\n",
            "Epoch 101/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3556 - accuracy: 0.8469 - val_loss: 0.5333 - val_accuracy: 0.7662\n",
            "Epoch 102/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3379 - accuracy: 0.8567 - val_loss: 0.6014 - val_accuracy: 0.7532\n",
            "Epoch 103/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3484 - accuracy: 0.8550 - val_loss: 0.5945 - val_accuracy: 0.7208\n",
            "Epoch 104/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3376 - accuracy: 0.8616 - val_loss: 0.5511 - val_accuracy: 0.7532\n",
            "Epoch 105/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3344 - accuracy: 0.8567 - val_loss: 0.5892 - val_accuracy: 0.7468\n",
            "Epoch 106/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3404 - accuracy: 0.8453 - val_loss: 0.5848 - val_accuracy: 0.7273\n",
            "Epoch 107/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3209 - accuracy: 0.8697 - val_loss: 0.6462 - val_accuracy: 0.7468\n",
            "Epoch 108/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3253 - accuracy: 0.8713 - val_loss: 0.5743 - val_accuracy: 0.7597\n",
            "Epoch 109/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3158 - accuracy: 0.8697 - val_loss: 0.6104 - val_accuracy: 0.7078\n",
            "Epoch 110/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3158 - accuracy: 0.8648 - val_loss: 0.6033 - val_accuracy: 0.7532\n",
            "Epoch 111/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3153 - accuracy: 0.8616 - val_loss: 0.5961 - val_accuracy: 0.7792\n",
            "Epoch 112/150\n",
            "20/20 [==============================] - 0s 8ms/step - loss: 0.3125 - accuracy: 0.8713 - val_loss: 0.6204 - val_accuracy: 0.7078\n",
            "Epoch 113/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2929 - accuracy: 0.8827 - val_loss: 0.6213 - val_accuracy: 0.7468\n",
            "Epoch 114/150\n",
            "20/20 [==============================] - 0s 7ms/step - loss: 0.3106 - accuracy: 0.8827 - val_loss: 0.6904 - val_accuracy: 0.7078\n",
            "Epoch 115/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.3021 - accuracy: 0.8762 - val_loss: 0.6736 - val_accuracy: 0.7273\n",
            "Epoch 116/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2905 - accuracy: 0.8909 - val_loss: 0.6694 - val_accuracy: 0.7338\n",
            "Epoch 117/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2886 - accuracy: 0.8795 - val_loss: 0.6722 - val_accuracy: 0.7208\n",
            "Epoch 118/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2841 - accuracy: 0.8925 - val_loss: 0.6973 - val_accuracy: 0.7338\n",
            "Epoch 119/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2798 - accuracy: 0.8827 - val_loss: 0.6544 - val_accuracy: 0.7532\n",
            "Epoch 120/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2789 - accuracy: 0.8893 - val_loss: 0.7307 - val_accuracy: 0.7662\n",
            "Epoch 121/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2873 - accuracy: 0.8941 - val_loss: 0.6573 - val_accuracy: 0.7597\n",
            "Epoch 122/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2784 - accuracy: 0.8795 - val_loss: 0.6974 - val_accuracy: 0.7208\n",
            "Epoch 123/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2690 - accuracy: 0.9007 - val_loss: 0.6681 - val_accuracy: 0.7143\n",
            "Epoch 124/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2407 - accuracy: 0.9202 - val_loss: 0.7107 - val_accuracy: 0.7208\n",
            "Epoch 125/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2589 - accuracy: 0.8958 - val_loss: 0.7085 - val_accuracy: 0.7338\n",
            "Epoch 126/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2546 - accuracy: 0.8941 - val_loss: 0.7938 - val_accuracy: 0.7208\n",
            "Epoch 127/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2521 - accuracy: 0.9055 - val_loss: 0.7131 - val_accuracy: 0.7403\n",
            "Epoch 128/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2339 - accuracy: 0.9137 - val_loss: 0.7866 - val_accuracy: 0.7468\n",
            "Epoch 129/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2500 - accuracy: 0.8990 - val_loss: 0.7795 - val_accuracy: 0.7143\n",
            "Epoch 130/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2318 - accuracy: 0.9186 - val_loss: 0.7551 - val_accuracy: 0.7338\n",
            "Epoch 131/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2410 - accuracy: 0.9104 - val_loss: 0.7297 - val_accuracy: 0.7338\n",
            "Epoch 132/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2171 - accuracy: 0.9235 - val_loss: 0.8046 - val_accuracy: 0.6818\n",
            "Epoch 133/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.2243 - accuracy: 0.9137 - val_loss: 1.0272 - val_accuracy: 0.6494\n",
            "Epoch 134/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2271 - accuracy: 0.9153 - val_loss: 0.7562 - val_accuracy: 0.7597\n",
            "Epoch 135/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2135 - accuracy: 0.9153 - val_loss: 0.8617 - val_accuracy: 0.7273\n",
            "Epoch 136/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1971 - accuracy: 0.9251 - val_loss: 0.8944 - val_accuracy: 0.7273\n",
            "Epoch 137/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2179 - accuracy: 0.9186 - val_loss: 0.8002 - val_accuracy: 0.7403\n",
            "Epoch 138/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2009 - accuracy: 0.9235 - val_loss: 0.7995 - val_accuracy: 0.7338\n",
            "Epoch 139/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.2092 - accuracy: 0.9137 - val_loss: 0.9184 - val_accuracy: 0.7078\n",
            "Epoch 140/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1912 - accuracy: 0.9283 - val_loss: 0.8756 - val_accuracy: 0.7273\n",
            "Epoch 141/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.2023 - accuracy: 0.9235 - val_loss: 0.8521 - val_accuracy: 0.7143\n",
            "Epoch 142/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1976 - accuracy: 0.9283 - val_loss: 0.8261 - val_accuracy: 0.7078\n",
            "Epoch 143/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.1916 - accuracy: 0.9235 - val_loss: 0.9223 - val_accuracy: 0.7338\n",
            "Epoch 144/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1928 - accuracy: 0.9300 - val_loss: 0.8994 - val_accuracy: 0.7532\n",
            "Epoch 145/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1706 - accuracy: 0.9349 - val_loss: 0.8769 - val_accuracy: 0.7208\n",
            "Epoch 146/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1898 - accuracy: 0.9316 - val_loss: 0.8765 - val_accuracy: 0.7403\n",
            "Epoch 147/150\n",
            "20/20 [==============================] - 0s 4ms/step - loss: 0.1729 - accuracy: 0.9365 - val_loss: 0.8911 - val_accuracy: 0.7532\n",
            "Epoch 148/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1703 - accuracy: 0.9332 - val_loss: 0.9996 - val_accuracy: 0.7143\n",
            "Epoch 149/150\n",
            "20/20 [==============================] - 0s 5ms/step - loss: 0.1532 - accuracy: 0.9446 - val_loss: 1.0316 - val_accuracy: 0.7532\n",
            "Epoch 150/150\n",
            "20/20 [==============================] - 0s 6ms/step - loss: 0.1866 - accuracy: 0.9332 - val_loss: 0.9534 - val_accuracy: 0.7208\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.src.callbacks.History at 0x78b5bbb7d030>"
            ]
          },
          "metadata": {},
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "vHKlK_XnsekF"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}